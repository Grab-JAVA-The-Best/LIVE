com:
  example:
    upload:
      path: /Live/Images/profile/

server:
  port: '8080'
  ssl:
    key-store: classpath:ssl/keystore.p12
    key-store-type: PKCS12
    key-store-password: ${KEY_STORE_PASSWORD}

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://live-live.store:3306/live?useSSL=false&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
    username: root
    password: ${COMMON_PASSWORD}
  redis:
    host: live-live.store
    port: '6379'
    password: ${COMMON_PASSWORD}
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  jpa:
    database: mysql
    properties:
      hibernate.default_batch_fetch_size: 1000
      hibernate:
        use_sql_comments: 'true'
        format_sql: 'true'
        show_sql: 'true'
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    defer-datasource-initialization: true
  mail:
    properties:
      mail:
        smtp:
          starttls:
            enable: true
          auth: true
    username: sxott94@naver.com
    host: smtp.naver.com
    password: ${EMAIL_PASSWORD}
    port: 465
    protocol: smtps
    thymeleaf:
      encoding: UTF-8
      prefix: classpath:/templates/
      cache: 'false'
      suffix: .html
      check-template-location: 'true'
      mode: HTML
  jackson:
    serialization:
      fail-on-empty-beans: 'false'
  servlet:
    multipart:
      max-file-size: 10MB
      enabled: 'true'
      max-request-size: 30MB
      location: /Live/Images/profile/

naver:
  accessKey: ${NAVER_ACCESSKEY}
  seceretKey: ${NAVER_SECRETKEY}
  serviceId: ${NAVER_SERVICEID}
  callingNumber: ${NAVER_CALLING_NUMBER}

jwt:
  secret: ${JWT_SECRETKEY}

logging:
  level:
    org:
      hibernate: info

cloud:
  aws:
    credentials:
      accessKey: ${ACCESS_KEY_AWS_S3}
      secretKey: ${SECRET_KEY_AWS_S3}
    s3:
      bucket: ${BUCKET_ADDRESS}
    region:
      static: ap-northeast-2
    stack:
      auto: false
  profiles:
    include: aws

